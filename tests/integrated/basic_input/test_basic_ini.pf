module test_grid
  use iso_fortran_env, only: ik => int32, rk => real64
  use mod_regular_2d_grid, only: regular_2d_grid_t
  use mod_input, only: input_t
  use funit
  implicit none

  class(regular_2d_grid_t), allocatable :: grid
  class(input_t), allocatable :: input

contains

  @before
  subroutine write_ini()
    integer :: ini_file

    open(newunit=ini_file, file=trim(filename), status='new')

    write(ini_file, *) "; This is a basic ini input file"
    write(ini_file, *) "[general]"
    write(ini_file, *) "title='simple ini input'"
    write(ini_file, *) "[grid]"
    write(ini_file, *) "read_from_grid=false"
    write(ini_file, *) "ni=5"
    write(ini_file, *) "xmin=-5"
    write(ini_file, *) "xmax=5"
    write(ini_file, *) "nj=10"
    write(ini_file, *) "ymin=-5"
    write(ini_file, *) "ymax=10"
    write(ini_file, *) "[physics]"
    write(ini_file, *) "polytropic_index=1.6"
    close(ini_file)

  end subroutine write_ini

  @test
  subroutine test_basic_ini()
    use iso_fortran_env, only: ik => int32, rk => real64
    use mod_input, only: input_t
    use mod_finite_volume_schemes, only: finite_volume_scheme_t
    use mod_grid, only: grid_t
    use mod_grid_factory, only: grid_factory_t
    implicit none

    character(150) :: command_line_arg
    character(50) :: input_filename
    class(input_t), allocatable :: input
    class(grid_factory_t), allocatable :: grid_factory
    class(grid_t), pointer :: grid => null()
    class(finite_volume_scheme_t), allocatable :: fv
    real(rk) :: t, delta_t

    call get_command_argument(1, command_line_arg)
    input_filename = trim(command_line_arg)

    allocate(input_t :: input)
    call input%read_from_ini(input_filename)

    grid_factory = grid_factory_t()
    grid => grid_factory%create_grid(input)

    do while(t < input%max_time)

      ! U = U
      call fv%integrate(delta_t)

      t = t + delta_t
    end do
  end subroutine test_basic_ini

  @after
  subroutine remove_ini()
    open(newunit=ini_file, file=trim(filename), status='old')
    close(ini_file, status='delete')
  end subroutine remove_ini

end module test_grid
